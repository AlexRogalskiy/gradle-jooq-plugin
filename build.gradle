buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2" }
    }
    dependencies {
        classpath "nu.studer:gradle-plugindev-plugin:$plugindevPluginVersion"
        classpath "nu.studer:gradle-credentials-plugin:$credentialsPluginVersion"
        classpath "com.gradle:build-scan-plugin:$buildScanPluginVersion"
    }
}

apply plugin: 'com.gradle.build-scan'
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'nu.studer.plugindev'
apply plugin: 'nu.studer.credentials'

group = 'nu.studer'
version = '3.0.0'

buildScan {
    licenseAgreementUrl 'https://gradle.com/terms-of-service'
    licenseAgree 'yes'
}

dependencies {
    compile("org.jooq:jooq:$jooqVersion")
    compile("org.jooq:jooq-meta:$jooqVersion")
    compile("org.jooq:jooq-codegen:$jooqVersion")

    testCompile("org.spockframework:spock-core:$spockVersion-groovy-2.4") {
        exclude module: 'groovy-all'
    }

    testCompile "com.h2database:h2:$h2Version"
}

plugindev {
    pluginImplementationClass 'nu.studer.gradle.jooq.JooqPlugin'
    pluginDescription 'Gradle plugin that integrates jOOQ. For each configuration, the plugin adds a task to generate the sources from a given database schema and includes the generated sources in the specified source set. Multiple configurations are supported. The code generation tasks fully participate in the Gradle uptodate checks.'
    pluginLicenses 'Apache-2.0'
    pluginTags 'gradle', 'plugin', 'jooq'
    authorId 'etiennestuder'
    authorName 'Etienne Studer'
    authorEmail 'etienne@studer.nu'
    projectUrl 'https://github.com/etiennestuder/gradle-jooq-plugin'
    projectInceptionYear '2014'
    done()
}

bintray {
    user = credentials.BINTRAY_USER
    key = credentials.BINTRAY_API_KEY
    pkg.repo = 'gradle-plugins'
    dryRun = false
}

def testAll = tasks.create('testAll') {
    group = 'Gradle cross-version test'
}

List<String> testedGradleVersions = []
(8..14).each { testedGradleVersions << "2.$it" }
(0..04).each { testedGradleVersions << "3.$it" }
testedGradleVersions << "2.14.1"
testedGradleVersions << "3.2.1"
testedGradleVersions << "3.4.1"

testedGradleVersions.each { version ->
    project.tasks.create("test_" + version.replaceAll("[^a-zA-Z0-9]", "_"), Test).with {
        systemProperty 'testContext.gradleVersion', version
        testAll.dependsOn(it)
    }
}
