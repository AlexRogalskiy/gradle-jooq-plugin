plugins {
    id 'nu.studer.plugindev' version '2.0'
    id 'nu.studer.credentials' version '2.1'
    id 'org.nosphere.gradle.github.actions' version '1.2.0'
    id 'java-library'
    id 'groovy'
}

group = 'nu.studer'
version = '5.2.2-DEV'

dependencies {
    api 'org.jooq:jooq-codegen:3.14.7'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-core:2.3.0.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'
    implementation 'javax.activation:activation:1.1.1'

    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.spockframework:spock-core:2.0-groovy-2.5'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test).configureEach {
    maxParallelForks = 2
    useJUnitPlatform()
}

plugindev {
    pluginImplementationClass 'nu.studer.gradle.jooq.JooqPlugin'
    pluginDescription 'Gradle plugin that integrates jOOQ. For each configuration, the plugin adds a task to generate the sources from a given database schema and includes the generated sources in the specified source set. Multiple configurations are supported. The code generation tasks fully participate in the Gradle uptodate checks.'
    pluginLicenses 'Apache-2.0'
    pluginTags 'gradle', 'plugin', 'jooq'
    authorId 'etiennestuder'
    authorName 'Etienne Studer'
    authorEmail 'etienne@studer.nu'
    projectUrl 'https://github.com/etiennestuder/gradle-jooq-plugin'
    projectInceptionYear '2014'
    done()
}

def testAll = tasks.create('testAll') {
    description = 'Runs the Gradle cross-version tests.'
    group = 'Verification'
}

List<String> testedGradleVersions = []
testedGradleVersions << "7.1"
testedGradleVersions << "7.0.2"
testedGradleVersions << "6.9"
testedGradleVersions << "6.1.1"

testedGradleVersions.each { version ->
    project.tasks.create("test_" + version.replaceAll("[^a-zA-Z0-9]", "_"), Test).with {
        systemProperty 'testContext.gradleVersion', version
        testAll.dependsOn(it)
    }
}
